server.port=8080

# gateway timeout
spring.cloud.gateway.httpclient.connect-timeout=10000
spring.cloud.gateway.httpclient.response-timeout=30s

# hystrix does not use gateway httpclient timeout
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=30000

# RemoveHopByHopHeadersFilter - do not remove: connection, upgrade
spring.cloud.gateway.filter.remove-hop-by-hop.headers=\
  keep-alive,transfer-encoding,te,trailer,proxy-authorization,proxy-authenticate,x-application-context

spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedMethods=GET,POST,OPTIONS,HEAD

auth.tokens=58cef136-acdb-49fb-b48e-a5f020c3cabb,1a2517fe-5a0d-43a5-adb4-227e39d02f78

authors.url=http://bff-authors-service:8080
# authors.url=http://192.168.99.100:8080

books.url=http://bff-books-service:8080
# books.url=http://192.168.99.100:8081

websocket.url=ws://bff-web-sockets-service:8080
# websocket.url=ws://192.168.99.100:8082
websocket.sockjs.url=http://bff-web-sockets-service:8080
# websocket.sockjs.url=http://192.168.99.100:8082
websocket.path=/push

bookdetails.url=http://bff-frontend:1805
# bookdetails.url=http://192.168.99.100:1805

spring.redis.host=my-redis
# spring.redis.host=192.168.99.100
spring.redis.port=6379
spring.redis.password=passw0rd
spring.redis.timeout=60000
spring.redis.database=0

redis.limit.replenishRate=1
redis.limit.burstCapacity=2
