apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: my-redis
  name: my-redis
  namespace: data-ns
spec:
  replicas: 1
  serviceName: redis-service
  selector:
    matchLabels:
      app: my-redis
  template:
    metadata:
      labels:
        app: my-redis
    spec:
      terminationGracePeriodSeconds: 20

      containers:
        - name: my-redis
          image: redis:alpine
          imagePullPolicy: Always

          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_PASSWORD

          command: ["redis-server"]
          args: ["--requirepass", "$(REDIS_PASSWORD)", "--appendonly", "yes", "--save", "30", "2"]

          ports:
            - name: redis
              containerPort: 6379

          volumeMounts:
            - name: redis-volume
              mountPath: /data

      volumes:
        - name: redis-volume
          persistentVolumeClaim:
            claimName: redis-pvc-0

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: data-ns
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: my-redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
